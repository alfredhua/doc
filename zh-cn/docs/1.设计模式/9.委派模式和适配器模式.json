{
  "filename": "9.委派模式和适配器模式.md",
  "__html": "<p>委派模式：</p>\n<p>委派模式注重的是结果：</p>\n<p>核心是：就是分发、调度、派遣</p>\n<p>BOSS ----&gt; leader ----&gt;target</p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">ITarget</span> </span>{\n\n     <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">doing</span><span class=\"hljs-params\">(String com)</span></span>;\n}\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TargetA</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">ITarget</span> </span>{\n\n    <span class=\"hljs-meta\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">doing</span><span class=\"hljs-params\">(String com)</span> </span>{\n        System.out.println(<span class=\"hljs-string\">\"我是员工A，我在做\"</span>+com+<span class=\"hljs-string\">\"工作\"</span>);\n    }\n}\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TargetB</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">ITarget</span> </span>{\n\n    <span class=\"hljs-meta\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">doing</span><span class=\"hljs-params\">(String com)</span> </span>{\n        System.out.println(<span class=\"hljs-string\">\"我是员工B，我在做\"</span>+com+<span class=\"hljs-string\">\"工作\"</span>);\n    }\n}\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Leader</span> </span>{\n\n    <span class=\"hljs-keyword\">private</span> Map&lt;String,ITarget&gt; doMap=<span class=\"hljs-keyword\">new</span> HashMap&lt;&gt;();\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">Leader</span><span class=\"hljs-params\">()</span> </span>{\n        doMap.put(<span class=\"hljs-string\">\"加密\"</span>, <span class=\"hljs-keyword\">new</span> TargetA());\n        doMap.put(<span class=\"hljs-string\">\"登录\"</span>, <span class=\"hljs-keyword\">new</span> TargetB());\n    }\n    <span class=\"hljs-comment\">//自己不干活，让别人干，自己负责选择让谁去干。</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">doing</span><span class=\"hljs-params\">(String com)</span></span>{\n        doMap.get(com).doing(com);\n\n    }\n\n}\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Boss</span> </span>{\n\n    <span class=\"hljs-comment\">//客户请求（Boss）、委派者（Leader）、被被委派者（Target）</span>\n    <span class=\"hljs-comment\">//委派者要持有被委派者的引用</span>\n    <span class=\"hljs-comment\">//代理模式注重的是过程， 委派模式注重的是结果</span>\n    <span class=\"hljs-comment\">//策略模式注重是可扩展（外部扩展），委派模式注重内部的灵活和复用</span>\n    <span class=\"hljs-comment\">//委派的核心：就是分发、调度、派遣</span>\n\n    <span class=\"hljs-comment\">//委派模式：就是静态代理和策略模式一种特殊的组合</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span></span>{\n        <span class=\"hljs-keyword\">new</span> Leader().doing(<span class=\"hljs-string\">\"加密\"</span>);\n    }\n\n}\n\n\n</code></pre>\n<p>适配器模式：</p>\n<p>注重的是兼容。稳定的代码不去修改，直接继承下来。</p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">SignService</span> </span>{\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">sign</span><span class=\"hljs-params\">()</span></span>;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">login</span><span class=\"hljs-params\">()</span></span>;\n}\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SignServiceImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">SignService</span> </span>{\n    <span class=\"hljs-meta\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">sign</span><span class=\"hljs-params\">()</span> </span>{\n        System.out.println(<span class=\"hljs-string\">\"注册\"</span>);\n    }\n\n    <span class=\"hljs-meta\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">login</span><span class=\"hljs-params\">()</span> </span>{\n        System.out.println(<span class=\"hljs-string\">\"登录\"</span>);\n    }\n}\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">QQSignService</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">SignServiceImpl</span> </span>{\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">qqSign</span><span class=\"hljs-params\">()</span></span>{\n        <span class=\"hljs-comment\">//qq注册</span>\n        <span class=\"hljs-keyword\">super</span>.sign();\n    }\n}\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SignTest</span> </span>{\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span></span>{\n        QQSignService qqSignService = <span class=\"hljs-keyword\">new</span> QQSignService();\n        qqSignService.qqSign();\n    }\n}\n</code></pre>\n",
  "link": "/zh-cn/docs/1.设计模式/9.委派模式和适配器模式.html",
  "meta": {
    "title": "委派模式-码农阿华",
    "keywords": "委派模式，设计模式",
    "description": "委派模式：核心是就是分发、调度、派遣。"
  }
}