{
  "filename": "8.JVM常用工具.md",
  "__html": "<ol>\n<li>\n<p>jconsole</p>\n<p>JConsole工具是JDK自带的可视化监控工具。查看java应用程序的运行概况、监控堆信息、永久区使用 情况、类加载情况等。</p>\n<p>命令行中输入:jconsole</p>\n<p><img src=\"http://java-run-blog.oss-cn-zhangjiakou.aliyuncs.com/3b6a1d2fce9a4efe9bc56d5f4d5ecc75.png\" alt=\"image\"></p>\n</li>\n<li>\n<p>jvisualvm</p>\n<p><img src=\"http://java-run-blog.oss-cn-zhangjiakou.aliyuncs.com/7831d41ed5154237b0110172ba5aad83.png\" alt=\"image\"></p>\n<ul>\n<li>\n<p>监控本地Java进程 可以监控本地的java进程的CPU，类，线程等。</p>\n</li>\n<li>\n<p>监控远端Java进程</p>\n<p>比如监控远端tomcat，演示部署在阿里云服务器上的tomcat</p>\n<p>(1)在visualvm中选中“远程”，右击“添加”</p>\n<p>(2)主机名上写服务器的ip地址，比如31.100.39.63，然后点击“确定”</p>\n<p>(3)右击该主机“31.100.39.63”，添加“JMX”[也就是通过JMX技术具体监控远端服务器哪个Java进程]</p>\n<p>(4)要想让服务器上的tomcat被连接，需要改一下 bin/catalina.sh 这个文件</p>\n<p>(5)在 ../conf 文件中添加两个文件jmxremote.access和jmxremote.password</p>\n<p>mxremote.access 文件内容：</p>\n<pre><code>  guest readonly\n  manager readwrite\n</code></pre>\n<p>jmxremote.password 文件内容：</p>\n<pre><code>  guest guest\n  manager manager\n</code></pre>\n<p>授权： chmod 600 <em>jmxremot</em></p>\n<p>(6)将连接服务器地址改为公网ip地址</p>\n<p>hostname -i 查看输出情况 172.26.225.240 172.17.0.1\nvim /etc/hosts</p>\n<p>172.26.255.240 31.100.39.63</p>\n<p>(7)设置上述端口对应的阿里云安全策略和防火墙策略</p>\n<p>(8)启动tomcat，来到bin目录\n./startup.sh</p>\n<p>(9)查看tomcat启动日志以及端口监听</p>\n<pre><code>  tail -f ../logs/catalina.out \n  lsof -i tcp:8080\n</code></pre>\n<p>(10)查看8998监听情况，可以发现多开了几个端口</p>\n<pre><code>  lsof -i:8998 得到PID\n  netstat -antup | grep PID\n</code></pre>\n<p>(11)在刚才的JMX中输入8998端口，并且输入用户名和密码则登录成功</p>\n<pre><code>  端口:8998 用户名:manager 密码:manager\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>Arthas</p>\n<p>github地址:<a href=\"https://github.com/alibaba/arthas\">https://github.com/alibaba/arthas</a>\n文档：<a href=\"https://alibaba.github.io/arthas/\">https://alibaba.github.io/arthas/</a></p>\n<p>Arthas 是Alibaba开源的Java诊断工具，采用命令行交互模式，是排查jvm相关问题的利器。</p>\n<p><img src=\"http://java-run-blog.oss-cn-zhangjiakou.aliyuncs.com/9389beed4ff44547bb550114549a7a25.png\" alt=\"image\"></p>\n</li>\n</ol>\n<p>常用命令</p>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>version</td>\n<td>查看arthas版本号</td>\n</tr>\n<tr>\n<td>help</td>\n<td>查看命名帮助信息</td>\n</tr>\n<tr>\n<td>cls</td>\n<td>清空屏幕</td>\n</tr>\n<tr>\n<td>session</td>\n<td>查看当前会话信息</td>\n</tr>\n<tr>\n<td>quit</td>\n<td>退出arthas客户端</td>\n</tr>\n<tr>\n<td>dashboard</td>\n<td>当前进程的实时数据面板</td>\n</tr>\n<tr>\n<td>thread</td>\n<td>当前JVM的线程堆栈信息</td>\n</tr>\n<tr>\n<td>jvm</td>\n<td>查看当前JVM的信息</td>\n</tr>\n<tr>\n<td>sysprop</td>\n<td>查看JVM的系统属性</td>\n</tr>\n<tr>\n<td>sc</td>\n<td>查看JVM已经加载的类信息</td>\n</tr>\n<tr>\n<td>dump</td>\n<td>dump已经加载类的byte code到特定目录</td>\n</tr>\n<tr>\n<td>jad</td>\n<td>反编译指定已加载类的源码</td>\n</tr>\n<tr>\n<td>monitor</td>\n<td>方法执行监控</td>\n</tr>\n<tr>\n<td>watch</td>\n<td>方法执行数据观测</td>\n</tr>\n<tr>\n<td>trace</td>\n<td>方法内部调用路径，并输出方法路径上的每个节点上耗时</td>\n</tr>\n<tr>\n<td>stack</td>\n<td>输出当前方法被调用的调用路径</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"4\">\n<li>\n<p>MAT</p>\n<p>Java堆分析器，用于查找内存泄漏</p>\n<p>Heap Dump，称为堆转储文件，是Java进程在某个时间内的快照</p>\n<p>下载地址 :<a href=\"https://www.eclipse.org/mat/downloads.php\">https://www.eclipse.org/mat/downloads.php</a></p>\n<p>获取Dump文件：</p>\n<ul>\n<li>\n<p>手动：jmap -dump:format=b,file=heap.hprof 44808</p>\n</li>\n<li>\n<p>自动：-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=heap.hprof</p>\n</li>\n</ul>\n</li>\n<li>\n<p>在线分析工具 <a href=\"http://gceasy.io\">gceasy.io</a></p>\n</li>\n</ol>\n",
  "link": "/zh-cn/docs/2.java/jvm/8.JVM常用工具.html",
  "meta": {}
}