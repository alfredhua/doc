{
  "filename": "3.calculations.md",
  "__html": "<pre><code class=\"language-java\">\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> </span>{\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n    test1();\n    test2();\n    test3();\n    test4();\n    test5();\n    test6();\n    test7();\n    test8();\n  }\n\n  <span class=\"hljs-comment\">/**\n   * &amp;（按位与），有0即为0\n   *\n   * &amp;按位与的运算规则是将两边的数转换为二进制位，然后运算最终值，运算规则即(两个为真才为真)1&amp;1=1 , 1&amp;0=0 , 0&amp;1=0 , 0&amp;0=0\n   *\n   * 3的二进制位是0000 0011 ， 5的二进制位是0000 0101 ， 那么就是011 &amp; 101，由按位与运算规则得知，001 &amp; 101等于0000 0001，最终值为1\n   *\n   * 7的二进制位是0000 0111，那就是111 &amp; 101等于101，也就是0000 0101，故值为5\n   *\n   */</span>\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span>  <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">test1</span><span class=\"hljs-params\">()</span></span>{\n    <span class=\"hljs-keyword\">int</span> i =<span class=\"hljs-number\">3</span>;   <span class=\"hljs-comment\">//0000 0011</span>\n    <span class=\"hljs-keyword\">int</span> h=<span class=\"hljs-number\">5</span>;    <span class=\"hljs-comment\">//0000 0101    0000 0001</span>\n    System.out.println(<span class=\"hljs-string\">\"test1()----&gt;&amp; ----&gt;\"</span> +(i &amp; h));\n  }\n\n  <span class=\"hljs-comment\">/**\n   * &amp;&amp;（逻辑与）\n   *\n   * &amp;&amp;逻辑与也称为短路逻辑与，先运算&amp;&amp;左边的表达式，一旦为假，后续不管多少表达式，均不再计算，一个为真，再计算右边的表达式，两个为真才为真。\n   *\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span>  <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">test2</span><span class=\"hljs-params\">()</span></span>{\n    <span class=\"hljs-keyword\">int</span> i =<span class=\"hljs-number\">3</span>;\n    <span class=\"hljs-keyword\">int</span> h=<span class=\"hljs-number\">5</span>;\n    System.out.println(<span class=\"hljs-string\">\"test2()----&gt;&amp;&amp; ----&gt;\"</span> +(<span class=\"hljs-number\">3</span>/<span class=\"hljs-number\">100</span>==<span class=\"hljs-number\">0</span> &amp;&amp; <span class=\"hljs-keyword\">true</span>));\n  }\n\n  <span class=\"hljs-comment\">/**\n   * |（按位或）有1即为1\n   *\n   * |按位或和&amp;按位与计算方式都是转换二进制再计算，不同的是运算规则(一个为真即为真)1|0 = 1 , 1|1 = 1 , 0|0 = 0 , 0|1 = 1\n   *   6的二进制位0000 0110 , 2的二进制位0000 0010 , 110|010为110，最终值0000 0110，故6|2等于6\n   */</span>\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span>  <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">test3</span><span class=\"hljs-params\">()</span></span>{\n    <span class=\"hljs-keyword\">int</span> i =<span class=\"hljs-number\">3</span>; <span class=\"hljs-comment\">// 000 011</span>\n    <span class=\"hljs-keyword\">int</span> h=<span class=\"hljs-number\">5</span>;  <span class=\"hljs-comment\">// 000 101  ----&gt;  000111</span>\n\n    System.out.println(<span class=\"hljs-string\">\"test3()----&gt;| ----&gt;\"</span> +(<span class=\"hljs-number\">3</span> | <span class=\"hljs-number\">5</span>));\n  }\n\n  <span class=\"hljs-comment\">/**\n   * ||（逻辑或）,有真即为真，\n   * 逻辑或||的运算规则是一个为真即为真，后续不再计算，一个为假再计算右边的表达式。\n   */</span>\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span>  <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">test4</span><span class=\"hljs-params\">()</span></span>{\n    System.out.println(<span class=\"hljs-string\">\"test4()----&gt;|| ----&gt;\"</span> +(<span class=\"hljs-keyword\">true</span> || <span class=\"hljs-keyword\">false</span>));\n  }\n\n  <span class=\"hljs-comment\">/**\n   * ^异或\n   *\n   * ^异或运算符顾名思义，异就是不同，其运算规则为1^0 = 1 , 1^1 = 0 , 0^1 = 1 , 0^0 = 0\n   * 5的二进制位是0000 0101 ， 9的二进制位是0000 0011，也就是0101 ^ 0011,结果为1100 , 00001100的十进制位是12\n   *\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">test5</span><span class=\"hljs-params\">()</span></span>{\n    <span class=\"hljs-keyword\">int</span> i =<span class=\"hljs-number\">3</span>;  <span class=\"hljs-comment\">//0011</span>\n    <span class=\"hljs-keyword\">int</span> h=<span class=\"hljs-number\">5</span>;   <span class=\"hljs-comment\">//0101   0110</span>\n    System.out.println(<span class=\"hljs-string\">\"test5()----&gt;^ ----&gt;\"</span> +(i^h));\n  }\n\n  <span class=\"hljs-comment\">/**\n   * &lt;&lt;\n   * 5&lt;&lt;2的意思为5的二进制位往左挪两位，右边补0，5的二进制位是0000 0101 ，\n   * 就是把有效值101往左挪两位就是0001--&gt; 0100 ，正数左边第一位补0，负数补1，等于乘于2的n次方，十进制位是20\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">test6</span><span class=\"hljs-params\">()</span></span>{\n    <span class=\"hljs-keyword\">int</span> h=<span class=\"hljs-number\">5</span>;   <span class=\"hljs-comment\">//0101  0101</span>\n    System.out.println(<span class=\"hljs-string\">\"test6()----&gt;^ ----&gt;\"</span> +(<span class=\"hljs-number\">5</span>&lt;&lt;<span class=\"hljs-number\">2</span>));\n  }\n\n  <span class=\"hljs-comment\">/**\n   *  &gt;&gt;\n   * 5&gt;&gt;2的意思为5的二进制位往右挪两位，左边补0，5的二进制位是0000 0101 ，\n   * 就是把有效值101往右挪两位就是0101 (0000 0001)，正数左边第一位补0，负数补1，等于乘于2的n次方，十进制位是20\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">test7</span><span class=\"hljs-params\">()</span></span>{\n    <span class=\"hljs-keyword\">int</span> h=<span class=\"hljs-number\">5</span>;   <span class=\"hljs-comment\">//0101 ---&gt; 0000 0001</span>\n    System.out.println(<span class=\"hljs-string\">\"test7()----&gt;^ ----&gt;\"</span> +(<span class=\"hljs-number\">5</span>&gt;&gt;<span class=\"hljs-number\">2</span>));\n  }\n\n  <span class=\"hljs-comment\">/**\n   * &gt;&gt;&gt; 无符号位右移\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">test8</span><span class=\"hljs-params\">()</span></span>{\n    <span class=\"hljs-comment\">//0000 1111 ----&gt;  0011</span>\n    System.out.println(<span class=\"hljs-string\">\"test7()----&gt;^ ----&gt;\"</span> +(<span class=\"hljs-number\">15</span>&gt;&gt;&gt;<span class=\"hljs-number\">2</span>));\n  }\n}\n</code></pre>\n",
  "link": "/zh-cn/docs/2.java/基础/3.calculations.html",
  "meta": {
    "title": "运算-码农阿华",
    "keywords": "运算，JAVA，基础",
    "description": "java，运算，位，异或，逻辑与，"
  }
}