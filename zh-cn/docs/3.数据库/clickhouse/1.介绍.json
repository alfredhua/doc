{
  "filename": "1.介绍.md",
  "__html": "<h2 id=\"%E4%BB%80%E4%B9%88%E6%98%AFclickhouse%EF%BC%9F\">什么是ClickHouse？ <a class=\"header-anchor\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AFclickhouse%EF%BC%9F\">#</a></h2>\n<p>ClickHouse是一个用于联机分析(OLAP)的列式数据库管理系统(DBMS)。</p>\n<p>在传统的行式数据库系统中，数据按如下顺序存储：\n<img src=\"http://hua-test01.oss-cn-beijing.aliyuncs.com/cef96f56c8c64633ad25596dad3f0577.png\" alt=\"aaaaaaaaaaaa\">\n常见的行式数据库系统有： MySQL、Postgres和MS SQL Server。</p>\n<p>在列式数据库系统中，数据按如下的顺序存储：\n<img src=\"http://hua-test01.oss-cn-beijing.aliyuncs.com/13a1f060084f4043bf2581cd0867eb1d.png\" alt=\"aaaaaaaaaaaa\"></p>\n<h2 id=\"olap%E5%9C%BA%E6%99%AF%E7%9A%84%E5%85%B3%E9%94%AE%E7%89%B9%E5%BE%81%EF%BC%88%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%EF%BC%89\">OLAP场景的关键特征（应用场景） <a class=\"header-anchor\" href=\"#olap%E5%9C%BA%E6%99%AF%E7%9A%84%E5%85%B3%E9%94%AE%E7%89%B9%E5%BE%81%EF%BC%88%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%EF%BC%89\">#</a></h2>\n<ul>\n<li>大多数是读请求</li>\n<li>数据总是以相当大的批(&gt; 1000 rows)进行写入</li>\n<li>不修改已添加的数据</li>\n<li>每次查询都从数据库中读取大量的行，但是同时又仅需要少量的列</li>\n<li>宽表，即每个表包含着大量的列</li>\n<li>较少的查询(通常每台服务器每秒数百个查询或更少)</li>\n<li>对于简单查询，允许延迟大约50毫秒</li>\n<li>列中的数据相对较小： 数字和短字符串(例如，每个URL 60个字节)</li>\n<li>处理单个查询时需要高吞吐量（每个服务器每秒高达数十亿行）</li>\n<li>事务不是必须的</li>\n<li>对数据一致性要求低</li>\n<li>每一个查询除了一个大表外都很小</li>\n<li>查询结果明显小于源数据，换句话说，数据被过滤或聚合后能够被盛放在单台服务器的内存中</li>\n</ul>\n<h2 id=\"clickhouse%E7%9A%84%E7%89%B9%E6%80%A7\">ClickHouse的特性 <a class=\"header-anchor\" href=\"#clickhouse%E7%9A%84%E7%89%B9%E6%80%A7\">#</a></h2>\n<ul>\n<li>数据压缩</li>\n</ul>\n<blockquote>\n<p>在一些列式数据库管理系统中(例如：InfiniDB CE 和 MonetDB) 并没有使用数据压缩。但是, 若想达到比较优异的性能，数据压缩确实起到了至关重要的作用。</p>\n</blockquote>\n<ul>\n<li>数据的磁盘存储</li>\n</ul>\n<blockquote>\n<p>许多的列式数据库(如 SAP HANA, Google PowerDrill)只能在内存中工作，这种方式会造成比实际更多的设备预算。ClickHouse被设计用于工作在传统磁盘上的系统，它提供每GB更低的存储成本，但如果有可以使用SSD和内存，它也会合理的利用这些资源。</p>\n</blockquote>\n<ul>\n<li>多核心并行处理</li>\n</ul>\n<blockquote>\n<p>ClickHouse会使用服务器上一切可用的资源，从而以最自然的方式并行处理大型查询。</p>\n</blockquote>\n<ul>\n<li>多服务器分布式处理</li>\n</ul>\n<blockquote>\n<p>上面提到的列式数据库管理系统中，几乎没有一个支持分布式的查询处理。\n在ClickHouse中，数据可以保存在不同的shard上，每一个shard都由一组用于容错的replica组成，查询可以并行地在所有shard上进行处理。这些对用户来说是透明的</p>\n</blockquote>\n<ul>\n<li>支持SQL</li>\n</ul>\n<blockquote>\n<p>ClickHouse支持基于SQL的声明式查询语言，该语言大部分情况下是与SQL标准兼容的。\n支持的查询包括 GROUP BY，ORDER BY，IN，JOIN以及非相关子查询。\n不支持窗口函数和相关子查询。</p>\n</blockquote>\n<ul>\n<li>向量引擎</li>\n</ul>\n<blockquote>\n<p>为了高效的使用CPU，数据不仅仅按列存储，同时还按向量(列的一部分)进行处理，这样可以更加高效地使用CPU。</p>\n</blockquote>\n<ul>\n<li>实时的数据更新</li>\n</ul>\n<blockquote>\n<p>ClickHouse支持在表中定义主键。为了使查询能够快速在主键中进行范围查找，数据总是以增量的方式有序的存储在<a href=\"https://clickhouse.tech/docs/zh/engines/table-engines/mergetree-family/mergetree/\">MergeTree</a>中。因此，数据可以持续不断地高效的写入到表中，并且写入的过程中不会存在任何加锁的行为。</p>\n</blockquote>\n<ul>\n<li>索引</li>\n</ul>\n<blockquote>\n<p>按照主键对数据进行排序，这将帮助ClickHouse在几十毫秒以内完成对数据特定值或范围的查找。</p>\n</blockquote>\n<ul>\n<li>适合在线查询</li>\n</ul>\n<blockquote>\n<p>在线查询意味着在没有对数据做任何预处理的情况下以极低的延迟处理查询并将结果加载到用户的页面中。</p>\n</blockquote>\n<ul>\n<li>支持近似计算</li>\n</ul>\n<blockquote>\n<p>ClickHouse提供各种各样在允许牺牲数据精度的情况下对查询进行加速的方法：</p>\n<ol>\n<li>用于近似计算的各类聚合函数，如：distinct values, medians, quantiles</li>\n<li>基于数据的部分样本进行近似查询。这时，仅会从磁盘检索少部分比例的数据。</li>\n<li>不使用全部的聚合条件，通过随机选择有限个数据聚合条件进行聚合。这在数据聚合条件满足某些分布条件下，在提供相当准确的聚合结果的同时降低了计算资源的使用。</li>\n</ol>\n</blockquote>\n<ul>\n<li>支持数据复制和数据完整性</li>\n</ul>\n<blockquote>\n<p>ClickHouse使用异步的多主复制技术。当数据被写入任何一个可用副本后，系统会在后台将数据分发给其他副本，以保证系统在不同副本上保持相同的数据。在大多数情况下ClickHouse能在故障后自动恢复，在一些少数的复杂情况下需要手动恢复。</p>\n</blockquote>\n<h2 id=\"%E6%80%A7%E8%83%BD\">性能 <a class=\"header-anchor\" href=\"#%E6%80%A7%E8%83%BD\">#</a></h2>\n<ul>\n<li>单个大查询的吞吐量</li>\n</ul>\n<blockquote>\n<p>吞吐量可以使用每秒处理的行数或每秒处理的字节数来衡量。如果数据被放置在page cache中，则一个不太复杂的查询在单个服务器上大约能够以2-10GB／s（未压缩）的速度进行处理（对于简单的查询，速度可以达到30GB／s）。如果数据没有在page cache中的话，那么速度将取决于你的磁盘系统和数据的压缩率。例如，如果一个磁盘允许以400MB／s的速度读取数据，并且数据压缩率是3，则数据的处理速度为1.2GB/s。这意味着，如果你是在提取一个10字节的列，那么它的处理速度大约是1-2亿行每秒。\n对于分布式处理，处理速度几乎是线性扩展的，但这受限于聚合或排序的结果不是那么大的情况下。</p>\n</blockquote>\n<ul>\n<li>处理短查询的延迟时间</li>\n</ul>\n<blockquote>\n<p>如果一个查询使用主键并且没有太多行(几十万)进行处理，并且没有查询太多的列，那么在数据被page cache缓存的情况下，它的延迟应该小于50毫秒(在最佳的情况下应该小于10毫秒)。 否则，延迟取决于数据的查找次数。如果你当前使用的是HDD，在数据没有加载的情况下，查询所需要的延迟可以通过以下公式计算得知： 查找时间（10 ms） * 查询的列的数量 * 查询的数据块的数量。</p>\n</blockquote>\n<ul>\n<li>处理大量短查询的吞吐量</li>\n</ul>\n<blockquote>\n<p>在相同的情况下，ClickHouse可以在单个服务器上每秒处理数百个查询（在最佳的情况下最多可以处理数千个）。但是由于这不适用于分析型场景。因此我们建议每秒最多查询100次。</p>\n</blockquote>\n<ul>\n<li>数据的写入性能</li>\n</ul>\n<blockquote>\n<p>我们建议每次写入不少于1000行的批量写入，或每秒不超过一个写入请求。当使用tab-separated格式将一份数据写入到MergeTree表中时，写入速度大约为50到200MB/s。如果您写入的数据每行为1Kb，那么写入的速度为50000到200000行每秒。如果您的行更小，那么写入速度将更高。为了提高写入性能，您可以使用多个INSERT进行并行写入，这将带来线性的性能提升。</p>\n</blockquote>\n<p><a href=\"https://www.infoq.cn/article/RR1GD91FUtjwI1yzEPvW\">https://www.infoq.cn/article/RR1GD91FUtjwI1yzEPvW</a></p>\n<p><a href=\"https://dbaplus.cn/news-73-3044-1.html\">https://dbaplus.cn/news-73-3044-1.html</a></p>\n",
  "link": "/zh-cn/docs/3.数据库/clickhouse/1.介绍.html",
  "meta": {}
}