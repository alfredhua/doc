{
  "filename": "4.SQL语法.md",
  "__html": "<h2 id=\"%E5%9F%BA%E6%9C%ACsql\">基本SQL <a class=\"header-anchor\" href=\"#%E5%9F%BA%E6%9C%ACsql\">#</a></h2>\n<pre><code class=\"language-sql\"><span class=\"hljs-comment\">-- 列出数据库列表</span>\n<span class=\"hljs-keyword\">show</span> <span class=\"hljs-keyword\">databases</span>;\n\n<span class=\"hljs-comment\">-- 列出数据库中表列表</span>\n<span class=\"hljs-keyword\">show</span> <span class=\"hljs-keyword\">tables</span>;\n\n<span class=\"hljs-comment\">-- 创建数据库</span>\n<span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">database</span> <span class=\"hljs-keyword\">test</span>;\n\n<span class=\"hljs-comment\">-- 删除一个表</span>\n<span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">table</span> <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">exists</span> test.t1;\n\n<span class=\"hljs-comment\">-- 创建第一个表</span>\n<span class=\"hljs-keyword\">create</span> <span class=\"hljs-comment\">/*temporary*/</span> <span class=\"hljs-keyword\">table</span> <span class=\"hljs-comment\">/*if not exists*/</span> test.m1 (\n <span class=\"hljs-keyword\">id</span> UInt16\n,<span class=\"hljs-keyword\">name</span> <span class=\"hljs-keyword\">String</span>\n) <span class=\"hljs-keyword\">ENGINE</span> = <span class=\"hljs-keyword\">Memory</span>\n;\n<span class=\"hljs-comment\">-- 插入测试数据</span>\n<span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> test.m1 (<span class=\"hljs-keyword\">id</span>, <span class=\"hljs-keyword\">name</span>) <span class=\"hljs-keyword\">values</span> (<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'abc'</span>), (<span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">'bbbb'</span>);\n\n<span class=\"hljs-comment\">-- 查询</span>\n<span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> test.m1;\n</code></pre>\n<h2 id=\"%E9%BB%98%E8%AE%A4%E5%80%BC%E5%A4%84%E7%90%86\">默认值处理 <a class=\"header-anchor\" href=\"#%E9%BB%98%E8%AE%A4%E5%80%BC%E5%A4%84%E7%90%86\">#</a></h2>\n<p>默认值 的处理方面， ClickHouse 中，默认值总是有的，如果没有显示式指定的话，会按字段类型处理：</p>\n<p>数字类型， 0\n字符串，空字符串\n数组，空数组\n日期， 0000-00-00\n时间， 0000-00-00 00:00:00\n注：NULLs 是不支持的</p>\n<h2 id=\"%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\">数据类型 <a class=\"header-anchor\" href=\"#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\">#</a></h2>\n<ol>\n<li>\n<p>整型：UInt8,UInt16,UInt32,UInt64,Int8,Int16,Int32,Int64</p>\n<blockquote>\n<p>范围U开头-2N/2~2N-1;非U开头0～2^N-1</p>\n</blockquote>\n</li>\n<li>\n<p>枚举类型：Enum8,Enum16， Enum('hello'=1,'test'=-1)</p>\n<blockquote>\n<p>Enum是有符号的整型映射的，因此负数也是可以的</p>\n</blockquote>\n</li>\n<li>\n<p>字符串型：FixedString(N)，String</p>\n<blockquote>\n<p>N是最大字节数，不是字符长度，如果是UTF8字符串，那么就会占3个字节，GBK会占2字节;String可以用来替换VARCHAR,BLOB,CLOB等数据类型</p>\n</blockquote>\n</li>\n<li>\n<p>时间类型：Date</p>\n</li>\n<li>\n<p>数组类型：Array(T)</p>\n<blockquote>\n<p>T是一个基本类型，包括arry在内，官方不建议使用多维数组</p>\n</blockquote>\n</li>\n<li>\n<p>元组：Tuple</p>\n</li>\n<li>\n<p>结构：Nested(name1 Type1,name2 Type2,...)，类似一种map的结</p>\n</li>\n</ol>\n<h2 id=\"%E7%89%A9%E5%88%97%E5%8C%96\">物列化 <a class=\"header-anchor\" href=\"#%E7%89%A9%E5%88%97%E5%8C%96\">#</a></h2>\n<p>指定 MATERIALIZED 表达式，即将一个列作为<code>物化列</code>处理了，这意味着这个列的值不能从<code>insert</code> 语句获取，只能是自己计算出来的。同时，\n物化列也不会出现在 <code>select *</code> 的结果中：</p>\n<pre><code class=\"language-sql\"><span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">table</span> <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">exists</span> test.m2;\n<span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> test.m2 (\n a <span class=\"hljs-keyword\">MATERIALIZED</span> (b+<span class=\"hljs-number\">1</span>)\n,b UInt16\n) <span class=\"hljs-keyword\">ENGINE</span> = <span class=\"hljs-keyword\">Memory</span>;\n<span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> test.m2 (b) <span class=\"hljs-keyword\">values</span> (<span class=\"hljs-number\">1</span>);\n<span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> test.m2;\n<span class=\"hljs-keyword\">select</span> a, b <span class=\"hljs-keyword\">from</span> test.m2;\n</code></pre>\n<h2 id=\"%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%88%97\">表达式列 <a class=\"header-anchor\" href=\"#%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%88%97\">#</a></h2>\n<p>ALIAS 表达式列某方面跟物化列相同，就是它的值不能从 insert 语句获取。不同的是， 物化列 是会真正保存数据（这样查询时不需要再计算），\n而表达式列不会保存数据（这样查询时总是需要计算），只是在查询时返回表达式的结果。</p>\n<pre><code class=\"language-sql\"><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> test.m3 (a <span class=\"hljs-keyword\">ALIAS</span> (b+<span class=\"hljs-number\">1</span>), b UInt16) <span class=\"hljs-keyword\">ENGINE</span> = <span class=\"hljs-keyword\">Memory</span>;\n<span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> test.m3(b) <span class=\"hljs-keyword\">values</span> (<span class=\"hljs-number\">1</span>);\n<span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> test.m3;\n<span class=\"hljs-keyword\">select</span> a, b <span class=\"hljs-keyword\">from</span> test.m3;\n</code></pre>\n",
  "link": "/zh-cn/docs/3.数据库/clickhouse/4.SQL语法.html",
  "meta": {}
}