{
  "filename": "10.聚合.md",
  "__html": "<h2 id=\"%E6%A1%B6\">桶 <a class=\"header-anchor\" href=\"#%E6%A1%B6\">#</a></h2>\n<blockquote>\n<p><em>桶</em> 简单来说就是满足特定条件的文档的集合：</p>\n<ul>\n<li>一个雇员属于 <em>男性</em> 桶或者 <em>女性</em> 桶</li>\n<li>奥尔巴尼属于 <em>纽约</em> 桶</li>\n<li>日期2014-10-28属于 <em>十月</em> 桶</li>\n</ul>\n</blockquote>\n<p>当聚合开始被执行，每个文档里面的值通过计算来决定符合哪个桶的条件。如果匹配到，文档将放入相应的桶并接着进行聚合操作。</p>\n<p>桶也可以被嵌套在其他桶里面，提供层次化的或者有条件的划分方案。例如，辛辛那提会被放入俄亥俄州这个桶，而 <em>整个</em> 俄亥俄州桶会被放入美国这个桶。</p>\n<p><img src=\"https://java-run-blog.oss-cn-zhangjiakou.aliyuncs.com/blog/Kkbjap.png\" alt=\"桶\"></p>\n<h2 id=\"%E6%8C%87%E6%A0%87\">指标 <a class=\"header-anchor\" href=\"#%E6%8C%87%E6%A0%87\">#</a></h2>\n<blockquote>\n<p>桶能让我们划分文档到有意义的集合，但是最终我们需要的是对这些桶内的文档进行一些指标的计算。分桶是一种达到目的的手段：它提供了一种给文档分组的方法来让我们可以计算感兴趣的指标。</p>\n<p>大多数 <em>指标</em> 是简单的数学运算（例如最小值、平均值、最大值，还有汇总），这些是通过文档的值来计算。在实践中，指标能让你计算像平均薪资、最高出售价格、95%的查询延迟这样的数据。</p>\n</blockquote>\n<h2 id=\"%E6%A1%B6%E5%92%8C%E6%8C%87%E6%A0%87%E7%9A%84%E7%BB%84%E5%90%88\">桶和指标的组合 <a class=\"header-anchor\" href=\"#%E6%A1%B6%E5%92%8C%E6%8C%87%E6%A0%87%E7%9A%84%E7%BB%84%E5%90%88\">#</a></h2>\n<p><em>聚合</em> 是由桶和指标组成的。 聚合可能只有一个桶，可能只有一个指标，或者可能两个都有。也有可能有一些桶嵌套在其他桶里面。例如，我们可以通过所属国家来划分文档（桶），然后计算每个国家的平均薪酬（指标）。</p>\n<p>由于桶可以被嵌套，我们可以实现非常多并且非常复杂的聚合：</p>\n<p>1.通过国家划分文档（桶）</p>\n<p>2.然后通过性别划分每个国家（桶）</p>\n<p>3.然后通过年龄区间划分每种性别（桶）</p>\n<p>4.最后，为每个年龄区间计算平均薪酬（指标）</p>\n<p>最后将告诉你每个 <code>&lt;国家, 性别, 年龄&gt;</code> 组合的平均薪酬。所有的这些都在一个请求内完成并且只遍历一次数据！</p>\n<pre><code class=\"language-json\">POST /cars/transactions/_bulk\n{ \"index\": {}}\n{ \"price\" : 10000, \"color\" : \"red\", \"make\" : \"honda\", \"sold\" : \"2014-10-28\" }\n{ \"index\": {}}\n{ \"price\" : 20000, \"color\" : \"red\", \"make\" : \"honda\", \"sold\" : \"2014-11-05\" }\n{ \"index\": {}}\n{ \"price\" : 30000, \"color\" : \"green\", \"make\" : \"ford\", \"sold\" : \"2014-05-18\" }\n{ \"index\": {}}\n{ \"price\" : 15000, \"color\" : \"blue\", \"make\" : \"toyota\", \"sold\" : \"2014-07-02\" }\n{ \"index\": {}}\n{ \"price\" : 12000, \"color\" : \"green\", \"make\" : \"toyota\", \"sold\" : \"2014-08-19\" }\n{ \"index\": {}}\n{ \"price\" : 20000, \"color\" : \"red\", \"make\" : \"honda\", \"sold\" : \"2014-11-05\" }\n{ \"index\": {}}\n{ \"price\" : 80000, \"color\" : \"red\", \"make\" : \"bmw\", \"sold\" : \"2014-01-01\" }\n{ \"index\": {}}\n{ \"price\" : 25000, \"color\" : \"blue\", \"make\" : \"ford\", \"sold\" : \"2014-02-12\" }\n\n</code></pre>\n<pre><code class=\"language-json\">有了数据，开始构建我们的第一个聚合。汽车经销商可能会想知道哪个颜色的汽车销量最好，用聚合可以轻易得到结果，用 terms 桶操作：\n\n\nGET /cars/transactions/_search\n{\n    \"size\" : 0,\n    \"aggs\" : { \n        \"popular_colors\" : { \n            \"terms\" : { \n              \"field\" : \"color\"\n            }\n        }\n    }\n}\n</code></pre>\n<p>聚合操作被置于顶层参数 <code>aggs</code> 之下（如果你愿意，完整形式 <code>aggregations</code> 同样有效）。</p>\n<p>然后，可以为聚合指定一个我们想要名称，本例中是： <code>popular_colors</code> 。</p>\n<p>最后，定义单个桶的类型 <code>terms</code> 。</p>\n",
  "link": "/zh-cn/docs/3.数据库/elasticsearch/10.聚合.html",
  "meta": {}
}