{
  "filename": "11.Term和全文本查询.md",
  "__html": "<h2 id=\"%E5%9F%BA%E4%BA%8Eterm%E7%9A%84%E6%9F%A5%E8%AF%A2\">基于Term的查询 <a class=\"header-anchor\" href=\"#%E5%9F%BA%E4%BA%8Eterm%E7%9A%84%E6%9F%A5%E8%AF%A2\">#</a></h2>\n<blockquote>\n<p>Term是表达语意的最小单位。搜索和利用统计语言模型进行自然语言处理都需要Term</p>\n</blockquote>\n<h4 id=\"%E7%89%B9%E7%82%B9\">特点 <a class=\"header-anchor\" href=\"#%E7%89%B9%E7%82%B9\">#</a></h4>\n<ul>\n<li>Term Level Query： term Query / Range Query / Exists Query / Prefix Query / Wildcard Query</li>\n<li>在ES中，Term查询，对输入不做分词，会将输入作为一个整体，在倒排索引中查找准确的词项，并且使用相关度算分公司为每个包含该词项的文档进行相关度算分。</li>\n<li>可以用个Constant Score 将查询转换成一个Filtering、避免算分，并利用缓存，提高性能。</li>\n</ul>\n<pre><code class=\"language-json\">可以搜索到结果：\nPOST /products/_search\n{\n  \"query\": {\n    \"term\": {\n      \"desc\": {\n        \"value\":\"iphone\"\n      }\n    }\n  }\n}\n\n搜索不到结果：\nPOST /products/_search\n{\n  \"query\": {\n    \"term\": {\n      \"desc\": {\n       \"value\": \"iPhone\"\n   \n      }\n    }\n  }\n}\n\n可以搜索结果：\nPOST /products/_search\n{\n  \"query\": {\n    \"term\": {\n      \"desc.keyword\": {\n        \"value\": \"iPhone\"\n        //\"value\":\"iphone\"\n      }\n    }\n  }\n}\n\n搜索不到结果：\nPOST /products/_search\n{\n  \"query\": {\n    \"term\": {\n      \"desc.keyword\": {\n        \"value\":\"iphone\"\n      }\n    }\n  }\n}\n</code></pre>\n<p>Term查询不会分词，会增加keyword字段，利用这个字段可以进行查询结果的。</p>\n<h2 id=\"%E5%9F%BA%E4%BA%8E%E5%85%A8%E6%96%87%E7%9A%84%E6%9F%A5%E8%AF%A2\">基于全文的查询 <a class=\"header-anchor\" href=\"#%E5%9F%BA%E4%BA%8E%E5%85%A8%E6%96%87%E7%9A%84%E6%9F%A5%E8%AF%A2\">#</a></h2>\n<ul>\n<li>Match Query / Match Phrase Query / Query String Query</li>\n</ul>\n<h4 id=\"%E7%89%B9%E7%82%B9-1\">特点 <a class=\"header-anchor\" href=\"#%E7%89%B9%E7%82%B9-1\">#</a></h4>\n<ul>\n<li>索引和搜索都会进行分词，查询字符串先传递到一个合适的分词器，然后生成一个供查询的词项列表</li>\n<li>查询的时候，先对输入的查询进行分词，然后每个词项逐个进行底层的查询，最终将结果进行合并，并未每个文档生成一个算分。</li>\n</ul>\n<pre><code class=\"language-json\">PUT groups\n{\n  \"mappings\": {\n    \"properties\": {\n      \"names\":{\n        \"type\": \"text\",\n        \"position_increment_gap\": 0\n      }\n    }\n  }\n}\n\nPOST groups/_doc\n{\n  \"names\": [ \"John Water\", \"Water Smith\"]\n}\n\n\nPOST groups/_search\n{\n  \"query\": {\n    \"match_phrase\": {\n      \"names\": {\n        \"query\": \"Water Water\",\n        \"slop\": 100\n      }\n    }\n  }\n}\n\n\nPOST groups/_search\n{\n  \"query\": {\n    \"match_phrase\": {\n      \"names\": \"Water Smith\"\n    }\n  }\n}\n</code></pre>\n",
  "link": "/zh-cn/docs/3.数据库/elasticsearch/11.Term和全文本查询.html",
  "meta": {}
}