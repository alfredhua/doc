{
  "filename": "4.基本操作.md",
  "__html": "<h2 id=\"%E6%96%B0%E5%BB%BA%E5%92%8C%E5%88%A0%E9%99%A4index\">新建和删除Index <a class=\"header-anchor\" href=\"#%E6%96%B0%E5%BB%BA%E5%92%8C%E5%88%A0%E9%99%A4index\">#</a></h2>\n<p>新建 Index，可以直接向 Elastic 服务器发出 PUT 请求。下面的例子是新建一个名叫weather的 Index。</p>\n<pre><code class=\"language-shell\">curl -X PUT 'localhost:9200/weather'\n\n</code></pre>\n<p>服务器返回一个 JSON 对象，里面的acknowledged字段表示操作成功。</p>\n<pre><code class=\"language-json\">{\n  <span class=\"hljs-attr\">\"acknowledged\"</span>:<span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"shards_acknowledged\"</span>:<span class=\"hljs-literal\">true</span>\n}\n</code></pre>\n<p>然后，我们发出 DELETE 请求，删除这个 Index。</p>\n<pre><code class=\"language-shell\">curl -X DELETE 'localhost:9200/weather'\n</code></pre>\n<h2 id=\"%E4%B8%AD%E6%96%87%E5%88%86%E8%AF%8D%E8%AE%BE%E7%BD%AE\">中文分词设置 <a class=\"header-anchor\" href=\"#%E4%B8%AD%E6%96%87%E5%88%86%E8%AF%8D%E8%AE%BE%E7%BD%AE\">#</a></h2>\n<pre><code class=\"language-shell\">\nelasticsearch plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.8.7/elasticsearch-analysis-ik-6.8.7.zip\n</code></pre>\n<h2 id=\"%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C\">数据操作 <a class=\"header-anchor\" href=\"#%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C\">#</a></h2>\n<h3 id=\"%E6%96%B0%E5%A2%9E%E8%AE%B0%E5%BD%95\">新增记录 <a class=\"header-anchor\" href=\"#%E6%96%B0%E5%A2%9E%E8%AE%B0%E5%BD%95\">#</a></h3>\n<p>向指定的 /Index/Type 发送 PUT 请求，就可以在 Index 里面新增一条记录。比如，向/accounts/person发送请求，就可以新增一条人员记录。</p>\n<pre><code class=\"language-shell\">\ncurl -H \"Content-Type: application/json\" -X PUT 'localhost:9200/accounts/person/1' -d '\n{\n  \"user\": \"张三\",\n  \"title\": \"工程师\",\n  \"desc\": \"数据库管理\"\n}'\n\n</code></pre>\n<p>服务器返回的 JSON 对象，会给出 Index、Type、Id、Version 等信息。</p>\n<pre><code class=\"language-shell\">{\n  \"_index\":\"accounts\",\n  \"_type\":\"person\",\n  \"_id\":\"1\",\n  \"_version\":1,\n  \"result\":\"created\",\n  \"_shards\":{\"total\":2,\"successful\":1,\"failed\":0},\n  \"created\":true\n}\n\n</code></pre>\n<h2 id=\"%E6%9F%A5%E7%9C%8B%E8%AE%B0%E5%BD%95\">查看记录 <a class=\"header-anchor\" href=\"#%E6%9F%A5%E7%9C%8B%E8%AE%B0%E5%BD%95\">#</a></h2>\n<pre><code class=\"language-shell\">\ncurl 'localhost:9200/accounts/person/1?pretty=true'\n\n</code></pre>\n<p>上面代码请求查看/accounts/person/1这条记录，URL 的参数pretty=true表示以易读的格式返回。</p>\n<p>返回的数据中，found字段表示查询成功，_source字段返回原始记录。</p>\n<pre><code class=\"language-json\">\n{\n  <span class=\"hljs-attr\">\"_index\"</span> : <span class=\"hljs-string\">\"accounts\"</span>,\n  <span class=\"hljs-attr\">\"_type\"</span> : <span class=\"hljs-string\">\"person\"</span>,\n  <span class=\"hljs-attr\">\"_id\"</span> : <span class=\"hljs-string\">\"1\"</span>,\n  <span class=\"hljs-attr\">\"_version\"</span> : <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">\"found\"</span> : <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"_source\"</span> : {\n    <span class=\"hljs-attr\">\"user\"</span> : <span class=\"hljs-string\">\"张三\"</span>,\n    <span class=\"hljs-attr\">\"title\"</span> : <span class=\"hljs-string\">\"工程师\"</span>,\n    <span class=\"hljs-attr\">\"desc\"</span> : <span class=\"hljs-string\">\"数据库管理\"</span>\n  }\n}\n\n</code></pre>\n<h2 id=\"%E5%88%A0%E9%99%A4%E8%AE%B0%E5%BD%95\">删除记录 <a class=\"header-anchor\" href=\"#%E5%88%A0%E9%99%A4%E8%AE%B0%E5%BD%95\">#</a></h2>\n<p>删除记录就是发出 DELETE 请求。</p>\n<pre><code class=\"language-java\">curl -X DELETE <span class=\"hljs-string\">'localhost:9200/accounts/person/1'</span>\n</code></pre>\n<h2 id=\"%E6%9B%B4%E6%96%B0%E8%AE%B0%E5%BD%95\">更新记录 <a class=\"header-anchor\" href=\"#%E6%9B%B4%E6%96%B0%E8%AE%B0%E5%BD%95\">#</a></h2>\n<p>更新记录就是使用 PUT 请求，重新发送一次数据。</p>\n<pre><code class=\"language-shell\"> curl -H \"Content-Type: application/json\" -X PUT 'localhost:9200/accounts/person/1' -d '\n{\n    \"user\" : \"张三\",\n    \"title\" : \"工程师\",\n    \"desc\" : \"数据库管理，软件开发\"\n}'\n\n</code></pre>\n<h2 id=\"%E8%BF%94%E5%9B%9E%E6%89%80%E6%9C%89%E8%AE%B0%E5%BD%95\">返回所有记录 <a class=\"header-anchor\" href=\"#%E8%BF%94%E5%9B%9E%E6%89%80%E6%9C%89%E8%AE%B0%E5%BD%95\">#</a></h2>\n<p>使用 GET 方法，直接请求/Index/Type/_search，就会返回所有记录。</p>\n<pre><code class=\"language-shell\">curl 'localhost:9200/accounts/person/_search'\n\n{\n  \"took\":2,\n  \"timed_out\":false,\n  \"_shards\":{\"total\":5,\"successful\":5,\"failed\":0},\n  \"hits\":{\n    \"total\":2,\n    \"max_score\":1.0,\n    \"hits\":[\n      {\n        \"_index\":\"accounts\",\n        \"_type\":\"person\",\n        \"_id\":\"AV3qGfrC6jMbsbXb6k1p\",\n        \"_score\":1.0,\n        \"_source\": {\n          \"user\": \"李四\",\n          \"title\": \"工程师\",\n          \"desc\": \"系统管理\"\n        }\n      },\n      {\n        \"_index\":\"accounts\",\n        \"_type\":\"person\",\n        \"_id\":\"1\",\n        \"_score\":1.0,\n        \"_source\": {\n          \"user\" : \"张三\",\n          \"title\" : \"工程师\",\n          \"desc\" : \"数据库管理，软件开发\"\n        }\n      }\n    ]\n  }\n}\n\n</code></pre>\n<h2 id=\"%E5%85%A8%E6%96%87%E6%90%9C%E7%B4%A2\">全文搜索 <a class=\"header-anchor\" href=\"#%E5%85%A8%E6%96%87%E6%90%9C%E7%B4%A2\">#</a></h2>\n<h3 id=\"match\">match <a class=\"header-anchor\" href=\"#match\">#</a></h3>\n<pre><code class=\"language-shell\">\ncurl -H \"Content-Type: application/json\"  'localhost:9200/accounts/person/_search'  -d '\n{\n  \"query\" : { \"match\" : { \"desc\" : \"软件\" }}\n}'\n\n</code></pre>\n<p>Elastic 默认一次返回10条结果，可以通过size字段改变这个设置。</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> curl -H <span class=\"hljs-string\">\"Content-Type: application/json\"</span> <span class=\"hljs-string\">'localhost:9200/accounts/person/_search'</span>  -d <span class=\"hljs-string\">'</span></span>\n{\n  \"query\" : { \"match\" : { \"desc\" : \"管理\" }},\n  \"size\": 1\n}'\n</code></pre>\n<p>上面代码指定，每次只返回一条结果。</p>\n<p>还可以通过from字段，指定位移。</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> curl -H <span class=\"hljs-string\">\"Content-Type: application/json\"</span> <span class=\"hljs-string\">'localhost:9200/accounts/person/_search'</span>  -d <span class=\"hljs-string\">'</span></span>\n{\n  \"query\" : { \"match\" : { \"desc\" : \"管理\" }},\n  \"from\": 1,\n  \"size\": 1\n}'\n</code></pre>\n<p>上面代码指定，从位置1开始（默认是从位置0开始），只返回一条结果。</p>\n<h3 id=\"match_phrase\">match_phrase <a class=\"header-anchor\" href=\"#match_phrase\">#</a></h3>\n<ul>\n<li>可以搜索分词相邻的结果，eg 根据新疆苹果可以搜到香甜新疆苹果而搜不到新疆香甜苹果</li>\n<li>可以使用slop指定两个匹配的token位置距离的最大值。</li>\n<li>可以使用analyzer指定分词器，覆盖mapping中设置的search_analyzer</li>\n</ul>\n<p>冬天暖心羽绒服 冬天超级暖心羽绒服 花花公子暖心羽绒服</p>\n<p>我们在设置了slop后允许超级和羽绒服这两个分词后的token距离最大值为2，可以搜索到如下数据了。因为冬天超级暖心羽绒服分词结果为冬天，超级,暖，心，羽绒服，超级与羽绒服距离正好为2，所以能匹配到。</p>\n<pre><code class=\"language-json\">{\n  <span class=\"hljs-attr\">\"query\"</span>: {\n    <span class=\"hljs-attr\">\"match_phrase\"</span>: {\n      <span class=\"hljs-attr\">\"name\"</span>: {\n        <span class=\"hljs-attr\">\"query\"</span>: <span class=\"hljs-string\">\"超级羽绒服\"</span>,\n        <span class=\"hljs-attr\">\"analyzer\"</span>: <span class=\"hljs-string\">\"ik_smart\"</span>,\n        <span class=\"hljs-attr\">\"slop\"</span>: <span class=\"hljs-number\">2</span>\n      }\n    }\n  }\n}\n\n</code></pre>\n<h2 id=\"%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97\">逻辑运算 <a class=\"header-anchor\" href=\"#%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97\">#</a></h2>\n<p>如果有多个搜索关键字， Elastic 认为它们是or关系。</p>\n<pre><code class=\"language-shell\">curl 'localhost:9200/accounts/person/_search'  -d '\n{\n  \"query\" : { \"match\" : { \"desc\" : \"软件 系统\" }}\n}'\n\n</code></pre>\n<p>上面代码搜索的是软件 or 系统。</p>\n<p>如果要执行多个关键词的and搜索，必须使用布尔查询。</p>\n<h3 id=\"bool%E7%BB%84%E5%90%88%E6%9F%A5%E8%AF%A2%23\">bool组合查询# <a class=\"header-anchor\" href=\"#bool%E7%BB%84%E5%90%88%E6%9F%A5%E8%AF%A2%23\">#</a></h3>\n<p>bool查询可以组合多种叶子查询，包含如下：</p>\n<ul>\n<li>must：出现于匹配查询当中，有助于匹配度(_score)的计算</li>\n<li>filter：必须满足才能出现，属于过滤，不会影响分值的计算，但是会过滤掉不符合的数据</li>\n<li>should：该条件下的内容是应该满足的内容，如果符合会增加分值，不符合降低分值，不会不显示</li>\n<li>must_not：满足的内容不会出现，与filter功能相反，属于过滤，不会影响分值的计算，但是会过滤掉不符合的数据</li>\n</ul>\n<pre><code class=\"language-json\">\n{\n  <span class=\"hljs-attr\">\"query\"</span>: {\n    <span class=\"hljs-attr\">\"bool\"</span>: {\n      <span class=\"hljs-attr\">\"must\"</span>: [\n        {    \n          <span class=\"hljs-attr\">\"match\"</span>: {\n            <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"花花公子羽绒服\"</span>\n          }\n        }\n      ],\n      <span class=\"hljs-attr\">\"must_not\"</span>: [\n        {\n          <span class=\"hljs-attr\">\"term\"</span>: {\n            <span class=\"hljs-attr\">\"proId\"</span>: <span class=\"hljs-number\">6</span>\n          }\n        }\n      ], \n      <span class=\"hljs-attr\">\"should\"</span>: [\n        {\n          <span class=\"hljs-attr\">\"terms\"</span>: {\n            <span class=\"hljs-attr\">\"name.keyword\"</span>: [<span class=\"hljs-string\">\"花花公子暖心羽绒服\"</span>, <span class=\"hljs-string\">\"花花公子外套\"</span>]\n          }\n        }\n      ], \n      <span class=\"hljs-attr\">\"filter\"</span>: {\n        <span class=\"hljs-attr\">\"range\"</span>: {\n          <span class=\"hljs-attr\">\"createTime\"</span>: {\n            <span class=\"hljs-attr\">\"gte\"</span>: <span class=\"hljs-string\">\"2019-12-12 17:56:56\"</span>,\n            <span class=\"hljs-attr\">\"lte\"</span>: <span class=\"hljs-string\">\"2019-12-19 17:56:56\"</span>,\n            <span class=\"hljs-attr\">\"format\"</span>: <span class=\"hljs-string\">\"yyyy-MM-dd HH:mm:ss\"</span>\n          }\n        }\n      }\n    }\n  }\n}\n\n</code></pre>\n<pre><code class=\"language-shell\">curl 'localhost:9200/accounts/person/_search'  -d '\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        { \"match\": { \"desc\": \"软件\" } },\n        { \"match\": { \"desc\": \"系统\" } }\n      ]\n    }\n  }\n}'\n</code></pre>\n",
  "link": "/zh-cn/docs/3.数据库/elasticsearch/4.基本操作.html",
  "meta": {}
}