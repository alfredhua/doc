{
  "filename": "10.如何设计一个MQ.md",
  "__html": "<h2 id=\"%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AAmq\">如何设计一个MQ <a class=\"header-anchor\" href=\"#%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AAmq\">#</a></h2>\n<ol>\n<li>伸缩性。：设计个分布式的系统呗，参照一下kafka的设计理念，broker -&gt; topic -&gt; partition，每个partition放一个机器，就存一部分数据。如果现在资源不够了，简单啊，给topic增加partition，然后做数据迁移，增加机器，不就可以存放更多数据，提供更高的吞吐量了？</li>\n<li>数据保存（落地磁盘）：落磁盘，才能保证别进程挂了数据就丢了。那落磁盘的时候怎么落啊？顺序写，这样就没有磁盘随机读写的寻址开销，磁盘顺序读写的性能是很高的，这就是kafka的思路。</li>\n<li>可用性：多副本 -&gt; leader &amp; follower -&gt; broker挂了重新选举leader即可对外服务。</li>\n<li>数据丢失问题。</li>\n</ol>\n",
  "link": "/zh-cn/docs/4.mq/rabbitmq/10.如何设计一个MQ.html",
  "meta": {}
}