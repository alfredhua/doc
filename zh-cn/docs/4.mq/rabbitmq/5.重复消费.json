{
  "filename": "5.重复消费.md",
  "__html": "<h1 id=\"%E9%87%8D%E5%A4%8D%E6%B6%88%E8%B4%B9%E9%97%AE%E9%A2%98\">重复消费问题 <a class=\"header-anchor\" href=\"#%E9%87%8D%E5%A4%8D%E6%B6%88%E8%B4%B9%E9%97%AE%E9%A2%98\">#</a></h1>\n<h2 id=\"id%E4%B8%BB%E9%94%AE\">ID主键 <a class=\"header-anchor\" href=\"#id%E4%B8%BB%E9%94%AE\">#</a></h2>\n<pre><code>基于数据库的唯一键来保证重复数据不会重复插入多条，进行消息入库。主键唯一，做异常处理机制。\n\n比如你拿个数据要写库，你先根据主键查一下，如果这数据都有了，你就别插入了，update一下好吧。\n</code></pre>\n<h2 id=\"redis\">Redis <a class=\"header-anchor\" href=\"#redis\">#</a></h2>\n<pre><code>使用redis做幂等处理。\n\n比如你是写redis，那没问题了，反正每次都是set，天然幂等性。\n\n你需要让生产者发送每条数据的时候，里面加一个全局唯一的id，类似订单id之类的东西，然后你这里消费到了之后，先根据这个id去比如redis里查一下，之前消费过吗？如果没有消费过，你就处理，然后这个id写redis。如果消费过了，那你就别处理了，保证别重复处理相同的消息即可。</code></pre>\n",
  "link": "/zh-cn/docs/4.mq/rabbitmq/5.重复消费.html",
  "meta": {}
}