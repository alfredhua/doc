{
  "filename": "1.consul.md",
  "__html": "<h2 id=\"docker-%E4%B8%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA\">docker 下环境搭建 <a class=\"header-anchor\" href=\"#docker-%E4%B8%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA\">#</a></h2>\n<pre><code class=\"language-java\">.env文件:\n\nCONSUL_IDR=./\n  \ndocker-compose.yml文件：\n  \nversion: <span class=\"hljs-string\">'3'</span>\nservices:\n  consul:\n    image: consul:latest\n    container_name: consul\n    restart: always\n    privileged: <span class=\"hljs-keyword\">true</span>\n    volumes:\n      - ${CONSUL_IDR}/data:/consul/data\n      - ${CONSUL_IDR}/config:/consul/config\n    ports:\n      - <span class=\"hljs-number\">8300</span>:<span class=\"hljs-number\">8300</span>\n      - <span class=\"hljs-number\">8301</span>:<span class=\"hljs-number\">8301</span>\n      - <span class=\"hljs-number\">8301</span>:<span class=\"hljs-number\">8301</span>/udp\n      - <span class=\"hljs-number\">8302</span>:<span class=\"hljs-number\">8302</span>\n      - <span class=\"hljs-number\">8302</span>:<span class=\"hljs-number\">8302</span>/udp\n      - <span class=\"hljs-number\">8400</span>:<span class=\"hljs-number\">8400</span>\n      - <span class=\"hljs-number\">8500</span>:<span class=\"hljs-number\">8500</span>\n      - <span class=\"hljs-number\">53</span>:<span class=\"hljs-number\">53</span>/udp\n    command: agent -server -bind=<span class=\"hljs-number\">0.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.0</span> -client=<span class=\"hljs-number\">0.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.0</span> -node=consul_Server1 -bootstrap-expect=<span class=\"hljs-number\">1</span> -ui\n</code></pre>\n<h2 id=\"%E6%B3%A8%E5%86%8C%E6%9C%8D%E5%8A%A1%E4%B8%AD%E5%BF%83\">注册服务中心 <a class=\"header-anchor\" href=\"#%E6%B3%A8%E5%86%8C%E6%9C%8D%E5%8A%A1%E4%B8%AD%E5%BF%83\">#</a></h2>\n<p><a href=\"https://github.com/alfredhua/spring-cloud/tree/master/consul\">github地址</a>:  <a href=\"https://github.com/alfredhua/spring-cloud/tree/master/consul\">https://github.com/alfredhua/spring-cloud/tree/master/consul</a></p>\n<p>引入依赖</p>\n<pre><code class=\"language-java\">\n   dependencies{\n        compile group: <span class=\"hljs-string\">'org.springframework.cloud'</span>, name: <span class=\"hljs-string\">'spring-cloud-starter-consul-discovery'</span>, version: <span class=\"hljs-string\">'2.2.3.RELEASE'</span>\n        compile group: <span class=\"hljs-string\">'org.springframework.boot'</span>, name: <span class=\"hljs-string\">'spring-boot-starter-actuator'</span>, version: <span class=\"hljs-string\">'2.2.3.RELEASE'</span>\n        compile group: <span class=\"hljs-string\">'org.springframework.boot'</span>, name: <span class=\"hljs-string\">'spring-boot-starter-web'</span>, version: <span class=\"hljs-string\">'2.2.3.RELEASE'</span>\n    }\n</code></pre>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">import</span> org.springframework.boot.SpringApplication;\n<span class=\"hljs-keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;\n<span class=\"hljs-keyword\">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;\n\n<span class=\"hljs-meta\">@SpringBootApplication</span>\n<span class=\"hljs-meta\">@EnableDiscoveryClient</span>\n<span class=\"hljs-meta\">@RestController</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">WebSiteServerApplication</span> </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span></span>{\n        SpringApplication.run(WebSiteServerApplication<span class=\"hljs-class\">.<span class=\"hljs-keyword\">class</span>)</span>;\n    }\n  \n    <span class=\"hljs-meta\">@RequestMapping</span>(<span class=\"hljs-string\">\"/{name}\"</span>)\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">home</span><span class=\"hljs-params\">(@PathVariable(<span class=\"hljs-string\">\"name\"</span>)</span> String name) </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"Hello \"</span>+name;\n    }\n}\n\n</code></pre>\n<p>消费者：</p>\n<pre><code class=\"language-java\">package com.consume.controller;\n\nimport com.consume.config.UrlConfig;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.client.RestTemplate;\n\n@RestController\npublic class TestController {\n\n    @Autowired\n    private RestTemplate restTemplate;\n\n    @Autowired\n    UrlConfig urlConfig;\n  \n    @Bean\n    @LoadBalanced\n    public RestTemplate restTemplate(){\n        return new RestTemplate();\n    }\n\n    @GetMapping(\"/getByUsername\")\n    public String getByUsername() {\n        return restTemplate.getForObject(urlConfig.getWebsiteUrl() + \"/{1}\",String.class,\"张三\");\n    }\n\n}\n\n\npackage com.consume;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.client.discovery.EnableDiscoveryClient;\n\n\n@SpringBootApplication\n@EnableDiscoveryClient\npublic class ConsumeApplication {\n\n    public static void main(String[] args){\n        SpringApplication.run(ConsumeApplication.class);\n\n    }\n}\n\n\npackage com.consume.config;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\n@EnableConfigurationProperties\npublic class UrlConfig {\n\n    @Value(\"${service-url.website}\")\n    private String websiteUrl;\n\n    public String getWebsiteUrl() {\n        return websiteUrl;\n    }\n\n    public void setWebsiteUrl(String websiteUrl) {\n        this.websiteUrl = websiteUrl;\n    }\n}\n\n\n\n</code></pre>\n",
  "link": "/zh-cn/docs/5.框架/spring-cloud/1.consul.html",
  "meta": {}
}