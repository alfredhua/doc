{
  "filename": "5.Hystrix.md",
  "__html": "<p>引入jar包</p>\n<pre><code class=\"language-java\">compile group: <span class=\"hljs-string\">'org.springframework.cloud'</span>, name: <span class=\"hljs-string\">'spring-cloud-starter-netflix-hystrix'</span>, version: <span class=\"hljs-string\">'2.2.3.RELEASE'</span>\n</code></pre>\n<p>配置启动类</p>\n<pre><code class=\"language-java\">package com.server;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker;\nimport org.springframework.cloud.client.discovery.EnableDiscoveryClient;\n\n@SpringBootApplication\n@EnableDiscoveryClient\n@EnableCircuitBreaker\npublic class HystrixClientApplication {\n\n    public static void main(String[] args){\n\n        SpringApplication.run(HystrixClientApplication.class);\n\n    }\n}\n\npackage com.server;\n\nimport com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.cloud.client.loadbalancer.LoadBalanced;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.client.RestTemplate;\n\n@RestController\npublic class TestController {\n\n\n    @Autowired\n    UrlConfig urlConfig;\n\n    @Autowired\n    ConsumerService consumerService;\n\n\n    @GetMapping(\"/getByUsername\")\n    public String getByUsername() {\n        return consumerService.consumer();\n    }\n\n    @Bean\n    @LoadBalanced\n    public RestTemplate restTemplate(){\n        return new RestTemplate();\n    }\n\n    @Component\n    class ConsumerService {\n        @Autowired\n        RestTemplate restTemplate;\n\n        @HystrixCommand(fallbackMethod = \"fallback\")\n        public String consumer() {\n            return restTemplate.getForObject(urlConfig.getServerUrl() + \"/{1}\",String.class,\"张三\");\n        }\n\n        public String fallback() {\n            return \"fallback\";\n        }\n\n    }\n\n}\n\npackage com.server;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\n@EnableConfigurationProperties\npublic class UrlConfig {\n\n    @Value(\"${service-url.server}\")\n    private String serverUrl;\n\n    public String getServerUrl() {\n        return serverUrl;\n    }\n\n    public void setServerUrl(String serverUrl) {\n        this.serverUrl = serverUrl;\n    }\n}\n\n\n</code></pre>\n<p>配置文件：</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">server:</span>\n  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">3030</span>\n\n<span class=\"hljs-attr\">spring:</span>\n  <span class=\"hljs-attr\">application:</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">consume</span>\n  <span class=\"hljs-attr\">main:</span>\n    <span class=\"hljs-attr\">allow-bean-definition-overriding:</span> <span class=\"hljs-literal\">true</span>\n\n  <span class=\"hljs-attr\">cloud:</span>\n    <span class=\"hljs-attr\">consul:</span>\n      <span class=\"hljs-attr\">host:</span> <span class=\"hljs-number\">127.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.1</span>\n      <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">8500</span>\n      <span class=\"hljs-attr\">discovery:</span>\n        <span class=\"hljs-attr\">healthCheckPath:</span> <span class=\"hljs-string\">/</span>\n        <span class=\"hljs-attr\">healthCheckInterval:</span> <span class=\"hljs-string\">5s</span>\n        <span class=\"hljs-attr\">instance-id:</span> <span class=\"hljs-string\">website-1</span>\n        <span class=\"hljs-attr\">serviceName:</span> <span class=\"hljs-string\">m-${spring.application.name}</span>\n\n\n<span class=\"hljs-attr\">service-url:</span>\n  <span class=\"hljs-attr\">server:</span> <span class=\"hljs-string\">http://server</span>\n</code></pre>\n",
  "link": "/zh-cn/docs/5.框架/spring-cloud/5.Hystrix.html",
  "meta": {}
}