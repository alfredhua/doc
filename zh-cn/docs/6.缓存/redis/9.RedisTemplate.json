{
  "filename": "9.RedisTemplate.md",
  "__html": "<h1 id=\"spring-boot%E9%9B%86%E6%88%90redistemplate\">Spring Boot集成RedisTemplate <a class=\"header-anchor\" href=\"#spring-boot%E9%9B%86%E6%88%90redistemplate\">#</a></h1>\n<p>github：<a href=\"https://github.com/alfredhua/common-spring-boot-start\">https://github.com/alfredhua/common-spring-boot-start</a></p>\n<p>jar包引入：</p>\n<pre><code class=\"language-java\">dependencies {\n    compile(<span class=\"hljs-string\">\"org.springframework.boot:spring-boot-starter-web:$springBootVersion\"</span>)\n    compile(<span class=\"hljs-string\">\"org.springframework.boot:spring-boot-starter-data-redis:$springBootVersion\"</span>)\n    compile(<span class=\"hljs-string\">\"org.springframework.boot:spring-boot-starter-aop:$springBootVersion\"</span>)\n\n    compile(<span class=\"hljs-string\">\"org.projectlombok:lombok:$lombokVersion\"</span>)\n    annotationProcessor (<span class=\"hljs-string\">\"org.projectlombok:lombok:$lombokVersion\"</span>)\n\n    compile(<span class=\"hljs-string\">\"org.apache.httpcomponents:httpclient:$httpclientVersion\"</span>)\n    compile (<span class=\"hljs-string\">\"javax.mail:mail:$mailVersion\"</span>)\n    compile(<span class=\"hljs-string\">\"com.alibaba:fastjson:$fastJsonVersion\"</span>)\n    compile group: <span class=\"hljs-string\">'redis.clients'</span>, name: <span class=\"hljs-string\">'jedis'</span>, version: <span class=\"hljs-string\">'2.9.1'</span>\n    testCompile (<span class=\"hljs-string\">'junit:junit:4.12'</span>)\n\n}\n</code></pre>\n<p>基本配置：</p>\n<pre><code class=\"language-java\">\n<span class=\"hljs-meta\">@Configuration</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">RedisConfig</span> </span>{\n\n    <span class=\"hljs-meta\">@Bean</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> RedisUtils <span class=\"hljs-title\">redisUtils</span><span class=\"hljs-params\">(@Autowired RedisConnectionFactory connectionFactory,\n                                 @Autowired ObjectMapper objectMapper)</span></span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> RedisUtils(RedisOptions.createRedisTemplate(connectionFactory,objectMapper,Object<span class=\"hljs-class\">.<span class=\"hljs-keyword\">class</span>))</span>;\n    }\n}\n</code></pre>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">RedisOptions</span> </span>{\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span>&lt;T&gt; RedisTemplate&lt;String, T&gt; <span class=\"hljs-title\">createRedisTemplate</span><span class=\"hljs-params\">(RedisConnectionFactory connectionFactory, ObjectMapper objectMapper, Class&lt;T&gt; tClass)</span></span>{\n        RedisTemplate&lt;String, T&gt; redisTemplate = <span class=\"hljs-keyword\">new</span> RedisTemplate&lt;&gt;();\n        Jackson2JsonRedisSerializer&lt;Object&gt; jackson2JsonRedisSerializer = <span class=\"hljs-keyword\">new</span> Jackson2JsonRedisSerializer&lt;Object&gt;(Object<span class=\"hljs-class\">.<span class=\"hljs-keyword\">class</span>)</span>;\n        ObjectMapper om = <span class=\"hljs-keyword\">new</span> ObjectMapper();\n        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);\n        om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);\n        jackson2JsonRedisSerializer.setObjectMapper(om);\n        StringRedisSerializer stringRedisSerializer = <span class=\"hljs-keyword\">new</span> StringRedisSerializer();\n        redisTemplate.setKeySerializer(stringRedisSerializer);\n        redisTemplate.setHashKeySerializer(stringRedisSerializer);\n\n        redisTemplate.setValueSerializer(jackson2JsonRedisSerializer);\n        redisTemplate.setHashValueSerializer(jackson2JsonRedisSerializer);\n\n        redisTemplate.setEnableTransactionSupport(<span class=\"hljs-keyword\">true</span>);\n        redisTemplate.setConnectionFactory(connectionFactory);\n        redisTemplate.afterPropertiesSet();\n        <span class=\"hljs-keyword\">return</span> redisTemplate;\n    }\n}\n\n</code></pre>\n<p>对于RedisTemplate的封装：</p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">package</span> com.common.redis;\n\n<span class=\"hljs-keyword\">import</span> org.springframework.data.redis.connection.DataType;\n<span class=\"hljs-keyword\">import</span> org.springframework.data.redis.core.*;\n<span class=\"hljs-keyword\">import</span> org.springframework.util.CollectionUtils;\n\n<span class=\"hljs-keyword\">import</span> java.util.List;\n<span class=\"hljs-keyword\">import</span> java.util.Map;\n<span class=\"hljs-keyword\">import</span> java.util.Set;\n<span class=\"hljs-keyword\">import</span> java.util.concurrent.TimeUnit;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">RedisUtils</span> </span>{\n\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">long</span> DEFAULT_TIME_OUT=<span class=\"hljs-number\">30</span>*<span class=\"hljs-number\">24</span>*<span class=\"hljs-number\">60</span>;\n\n  <span class=\"hljs-keyword\">private</span> RedisTemplate&lt;String,Object&gt; template;\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">RedisUtils</span><span class=\"hljs-params\">(RedisTemplate&lt;String, Object&gt; template)</span> </span>{\n    <span class=\"hljs-keyword\">this</span>.template = template;\n  }\n\n\n  <span class=\"hljs-comment\">/**\n   * 设置过期时间，默认单位秒\n   * <span class=\"hljs-doctag\">@param</span> key key\n   * <span class=\"hljs-doctag\">@param</span> timeout 过期时间\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">expire</span><span class=\"hljs-params\">(String key,<span class=\"hljs-keyword\">long</span> timeout)</span></span>{\n    <span class=\"hljs-keyword\">if</span> (timeout==<span class=\"hljs-number\">0</span>) {\n      template.expire(key, DEFAULT_TIME_OUT, TimeUnit.SECONDS);\n    }<span class=\"hljs-keyword\">else</span>{\n      template.expire(key, timeout, TimeUnit.SECONDS);\n    }\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 从redis中随机返回一个key\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Object <span class=\"hljs-title\">randomKey</span><span class=\"hljs-params\">()</span> </span>{\n    <span class=\"hljs-keyword\">return</span> template.randomKey();\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 返回 key 所储存的值的类型\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> DataType <span class=\"hljs-title\">getType</span><span class=\"hljs-params\">(String key)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> template.type(key);\n  }\n\n\n  <span class=\"hljs-comment\">/**\n   * 根据key 获取过期时间\n   * <span class=\"hljs-doctag\">@param</span> key 键 不能为null\n   * <span class=\"hljs-doctag\">@return</span> 时间(秒) 返回0代表为永久有效\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Long <span class=\"hljs-title\">getExpire</span><span class=\"hljs-params\">(String key)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> template.getExpire(key, TimeUnit.SECONDS);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 验证key是否存在\n   * <span class=\"hljs-doctag\">@param</span> key key\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Boolean <span class=\"hljs-title\">hasKey</span><span class=\"hljs-params\">(String key)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> template.hasKey(key);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 删除\n   * <span class=\"hljs-doctag\">@param</span> key key\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">del</span><span class=\"hljs-params\">(String... key)</span> </span>{\n    <span class=\"hljs-keyword\">if</span> (key != <span class=\"hljs-keyword\">null</span> &amp;&amp; key.length &gt; <span class=\"hljs-number\">0</span>) {\n      <span class=\"hljs-keyword\">if</span> (key.length == <span class=\"hljs-number\">1</span>) {\n        template.delete(key[<span class=\"hljs-number\">0</span>]);\n      } <span class=\"hljs-keyword\">else</span> {\n        template.delete(CollectionUtils.arrayToList(key));\n      }\n    }\n  }\n\n  <span class=\"hljs-comment\">/**\n   * Object类型存储\n   * <span class=\"hljs-doctag\">@param</span> key  key\n   * <span class=\"hljs-doctag\">@param</span> timeout 过期时间，0：表示使用默认30天,null：表示永不过期\n   * <span class=\"hljs-doctag\">@param</span> value\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">objectSet</span><span class=\"hljs-params\">(String key,Long timeout,Object value)</span></span>{\n    <span class=\"hljs-keyword\">try</span> {\n      <span class=\"hljs-keyword\">if</span> (timeout==<span class=\"hljs-keyword\">null</span>){\n        template.opsForValue().set(key, value);\n      }<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (timeout==<span class=\"hljs-number\">0</span>) {\n        template.opsForValue().set(key, value, DEFAULT_TIME_OUT, TimeUnit.SECONDS);\n      }<span class=\"hljs-keyword\">else</span>{\n        template.opsForValue().set(key, value, timeout, TimeUnit.SECONDS);\n      }\n    }<span class=\"hljs-keyword\">catch</span> (Exception e){\n      <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> RuntimeException(<span class=\"hljs-string\">\"set error\"</span>,e);\n    }\n  }\n  <span class=\"hljs-comment\">/**\n   * Object 类型获取\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-keyword\">public</span> &lt;T&gt; <span class=\"hljs-function\">T <span class=\"hljs-title\">objectGet</span><span class=\"hljs-params\">(String key)</span></span>{\n    <span class=\"hljs-keyword\">try</span> {\n      <span class=\"hljs-keyword\">return</span> (T) template.opsForValue().get(key);\n    }<span class=\"hljs-keyword\">catch</span> ( Exception e){\n      <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> RuntimeException(<span class=\"hljs-string\">\"redis get error\"</span>,e);\n    }\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 递增\n   * <span class=\"hljs-doctag\">@param</span> key  key\n   * <span class=\"hljs-doctag\">@param</span> delta 递增因子，0或者null时候：默认是1,负数表示递减。\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Long <span class=\"hljs-title\">increment</span><span class=\"hljs-params\">(String key, Long delta)</span> </span>{\n    <span class=\"hljs-keyword\">if</span>(delta==<span class=\"hljs-keyword\">null</span>||delta==<span class=\"hljs-number\">0</span>){\n      <span class=\"hljs-keyword\">return</span> template.opsForValue().increment(key, <span class=\"hljs-number\">1L</span>);\n    }\n    <span class=\"hljs-keyword\">return</span> template.opsForValue().increment(key, delta);\n  }\n\n\n  <span class=\"hljs-comment\">/**\n   * HashGet\n   *\n   * <span class=\"hljs-doctag\">@param</span> key  键 不能为null\n   * <span class=\"hljs-doctag\">@param</span> field 项 不能为null\n   * <span class=\"hljs-doctag\">@return</span> 值\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Object <span class=\"hljs-title\">hashGet</span><span class=\"hljs-params\">(String key, String field)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForHash().get(key, field);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 向一张hash表中放入数据,如果不存在将创建\n   * <span class=\"hljs-doctag\">@param</span> key   键\n   * <span class=\"hljs-doctag\">@param</span> field  项\n   * <span class=\"hljs-doctag\">@param</span> value 值\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">hashSet</span><span class=\"hljs-params\">(String key, String field, Object value)</span> </span>{\n    template.opsForHash().put(key, field, value);\n  }\n\n  <span class=\"hljs-comment\">/**\n   *\n   * <span class=\"hljs-doctag\">@param</span> key key\n   * <span class=\"hljs-doctag\">@param</span> map 对象\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">hashPutAll</span><span class=\"hljs-params\">(String key, Map&lt;Object, Object&gt; map)</span></span>{\n    template.opsForHash().putAll(key,map);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 获取map\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Map&lt;Object, Object&gt; <span class=\"hljs-title\">hashGetAll</span><span class=\"hljs-params\">(String key)</span></span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForHash().entries(key);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 返回这个key里面所有fields的值\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@param</span> fields\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> List&lt;Object&gt; <span class=\"hljs-title\">multiHashGet</span><span class=\"hljs-params\">(String key, String...fields)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForHash().multiGet(key, CollectionUtils.arrayToList(fields));\n  }\n\n\n\n  <span class=\"hljs-comment\">/**\n   * 判断key中的hashKey是否存在\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@param</span> field\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Boolean <span class=\"hljs-title\">hasKey</span><span class=\"hljs-params\">(String key,String field)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForHash().hasKey(key, field);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * list left push\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@param</span> value\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">listLeftPush</span><span class=\"hljs-params\">(String key,Object value)</span> </span>{\n    template.opsForList().leftPush(key, value);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * list left pop\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Object <span class=\"hljs-title\">listLeftPop</span><span class=\"hljs-params\">(String key)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForList().leftPop(key);\n  }\n\n\n\n  <span class=\"hljs-comment\">/**\n   * list right push\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@param</span> value\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">listRightPush</span><span class=\"hljs-params\">(String key,Object value)</span> </span>{\n    template.opsForList().rightPush(key, value);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * list right pop\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Object <span class=\"hljs-title\">listRightPop</span><span class=\"hljs-params\">(String key)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForList().rightPop(key);\n  }\n\n\n  <span class=\"hljs-comment\">/**\n   * 获取该key index处的元素\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@param</span> index\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Object <span class=\"hljs-title\">listGetIndex</span><span class=\"hljs-params\">(String key,<span class=\"hljs-keyword\">int</span> index)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForList().index(key, index);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 获取列表的长度\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Long <span class=\"hljs-title\">listSize</span><span class=\"hljs-params\">(String key)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForList().size(key);\n  }\n\n\n  <span class=\"hljs-comment\">/**\n   * 获取key中下标从start到end处的值\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@param</span> start 开始下标\n   * <span class=\"hljs-doctag\">@param</span> end  结束下标\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> List&lt;Object&gt; <span class=\"hljs-title\">listRange</span><span class=\"hljs-params\">(String key,<span class=\"hljs-keyword\">int</span> start,<span class=\"hljs-keyword\">int</span> end)</span></span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForList().range(key, start, end);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 删除\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Long <span class=\"hljs-title\">listRemove</span><span class=\"hljs-params\">(String key,<span class=\"hljs-keyword\">long</span> count,Object value)</span></span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForList().remove(key, count, value);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 向set 集合中添加\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@param</span> values\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setAdd</span><span class=\"hljs-params\">(String key,Object...values)</span> </span>{\n    template.opsForSet().add(key, values);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 移除并取出第一个元素\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Object <span class=\"hljs-title\">setGet</span><span class=\"hljs-params\">(String key)</span></span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForSet().pop(key);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 返回集合中所有的元素\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Set&lt;Object&gt; <span class=\"hljs-title\">setGetAll</span><span class=\"hljs-params\">(String key)</span></span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForSet().members(key);\n  }\n\n\n  <span class=\"hljs-comment\">/**\n   * 返回指定数量的元素(随机)\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@param</span> count\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> List&lt;Object&gt; <span class=\"hljs-title\">setRandomMembers</span><span class=\"hljs-params\">(String key,<span class=\"hljs-keyword\">int</span> count)</span></span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForSet().randomMembers(key, count);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 返回集合中的长度\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Long <span class=\"hljs-title\">setGetSize</span><span class=\"hljs-params\">(String key)</span></span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForSet().size(key);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 返回给定集合的差集（返回 key在otherKeys不存在的元素）\n   * <span class=\"hljs-doctag\">@param</span> key 主集合\n   * <span class=\"hljs-doctag\">@param</span> otherKeys 其他集合\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Set&lt;Object&gt; <span class=\"hljs-title\">setDifference</span><span class=\"hljs-params\">(String key,String...otherKeys)</span></span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForSet().difference(key, CollectionUtils.arrayToList(otherKeys));\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 返回给定集合的交集（返回 key与otherKeys中共同存在的元素）\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@param</span> otherKeys\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Set&lt;Object&gt; <span class=\"hljs-title\">setIntersect</span><span class=\"hljs-params\">(String key,String...otherKeys)</span></span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForSet().intersect(key, CollectionUtils.arrayToList(otherKeys));\n  }\n  <span class=\"hljs-comment\">/**\n   * 返回给定集合的并集（key和otherKeys加起来的所有元素，共同拥有的元素只返回一个）\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@param</span> otherKeys\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Set&lt;Object&gt; <span class=\"hljs-title\">setUnion</span><span class=\"hljs-params\">(String key,String...otherKeys)</span></span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForSet().union(key, CollectionUtils.arrayToList(otherKeys));\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 返回集合中的所有元素\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Set&lt;Object&gt; <span class=\"hljs-title\">setMembers</span><span class=\"hljs-params\">(String key)</span></span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForSet().members(key);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 迭代集合中的元素\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Cursor&lt;Object&gt; <span class=\"hljs-title\">setScan</span><span class=\"hljs-params\">(String key)</span></span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForSet().scan(key, ScanOptions.NONE);\n  }\n\n  <span class=\"hljs-comment\">//zSet操作 有序集合</span>\n\n  <span class=\"hljs-comment\">/**\n   * 添加数据\n   *\n   * 添加方式：\n   * 1.创建一个set集合\n   * Set&lt;ZSetOperations.TypedTuple&lt;Object&gt;&gt; sets=new HashSet&lt;&gt;();\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@param</span> tuples\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">zSetAdd</span><span class=\"hljs-params\">(String key,Set&lt;ZSetOperations.TypedTuple&lt;Object&gt;&gt; tuples)</span> </span>{\n    template.opsForZSet().add(key, tuples);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 获取有序集合的成员数\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Long <span class=\"hljs-title\">zSetCard</span><span class=\"hljs-params\">(String key)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForZSet().zCard(key);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 计算在有序集合中指定区间分数的成员数\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@param</span> min 最小排序分数\n   * <span class=\"hljs-doctag\">@param</span> max 最大排序分数\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Long <span class=\"hljs-title\">zSetCount</span><span class=\"hljs-params\">(String key,Double min,Double max)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForZSet().count(key, min, max);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 获取有序集合下标区间 start 至 end 的成员  分数值从小到大排列\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@param</span> start\n   * <span class=\"hljs-doctag\">@param</span> end\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Set&lt;Object&gt; <span class=\"hljs-title\">zSetRange</span><span class=\"hljs-params\">(String key,<span class=\"hljs-keyword\">int</span> start,<span class=\"hljs-keyword\">int</span> end)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForZSet().range(key, start, end);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 获取有序集合下标区间 start 至 end 的成员  分数值从大到小排列\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@param</span> start\n   * <span class=\"hljs-doctag\">@param</span> end\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Set&lt;Object&gt; <span class=\"hljs-title\">zSetReverseRange</span><span class=\"hljs-params\">(String key,<span class=\"hljs-keyword\">int</span> start,<span class=\"hljs-keyword\">int</span> end)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForZSet().reverseRange(key, start, end);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 返回 分数在min至max之间的数据 按分数值递减(从大到小)的次序排列。\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@param</span> min\n   * <span class=\"hljs-doctag\">@param</span> max\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Set&lt;Object&gt; <span class=\"hljs-title\">zSetReverseRange</span><span class=\"hljs-params\">(String key,Double min,Double max)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForZSet().reverseRangeByScore(key, min, max);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 返回指定成员的下标\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@param</span> value\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Long <span class=\"hljs-title\">zSetRank</span><span class=\"hljs-params\">(String key,Object value)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForZSet().rank(key, value);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 删除key的指定元素\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@param</span> values\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Long <span class=\"hljs-title\">zSetRemoveValue</span><span class=\"hljs-params\">(String key,Object values)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForZSet().remove( key, values);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 移除下标从start至end的元素\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@param</span> start\n   * <span class=\"hljs-doctag\">@param</span> end\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Long <span class=\"hljs-title\">zSetRemoveRange</span><span class=\"hljs-params\">(String key,<span class=\"hljs-keyword\">int</span> start,<span class=\"hljs-keyword\">int</span> end)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForZSet().removeRange(key, start, end);\n  }\n\n  <span class=\"hljs-comment\">/**\n   * 移除分数从min至max的元素\n   * <span class=\"hljs-doctag\">@param</span> key\n   * <span class=\"hljs-doctag\">@param</span> min\n   * <span class=\"hljs-doctag\">@param</span> max\n   * <span class=\"hljs-doctag\">@return</span>\n   */</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Long <span class=\"hljs-title\">zSetRemoveRangeByScore</span><span class=\"hljs-params\">(String key,Double min,Double max)</span> </span>{\n    <span class=\"hljs-keyword\">return</span> template.opsForZSet().removeRangeByScore(key, min, max);\n  }\n\n\n}\n\n</code></pre>\n",
  "link": "/zh-cn/docs/6.缓存/redis/9.RedisTemplate.html",
  "meta": {}
}