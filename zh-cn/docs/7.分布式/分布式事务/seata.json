{
  "filename": "seata.md",
  "__html": "<h2 id=\"%E4%BA%8B%E5%8A%A1\">事务 <a class=\"header-anchor\" href=\"#%E4%BA%8B%E5%8A%A1\">#</a></h2>\n<p>严格意义上的事务实现应该是具备原子性、一致性、隔离性和持久性，简称 ACID。</p>\n<ul>\n<li>原子性（Atomicity），可以理解为一个事务内的所有操作要么都执行，要么都不执行。</li>\n<li>一致性（Consistency），可以理解为数据是满足完整性约束的，也就是不会存在中间状态的数据，比如你账上有400，我账上有100，你给我打200块，此时你账上的钱应该是200，我账上的钱应该是300，不会存在我账上钱加了，你账上钱没扣的中间状态。</li>\n<li>隔离性（Isolation），指的是多个事务并发执行的时候不会互相干扰，即一个事务内部的数据对于其他事务来说是隔离的。</li>\n<li>持久性（Durability），指的是一个事务完成了之后数据就被永远保存下来，之后的其他操作或故障都不会对事务的结果产生影响。</li>\n</ul>\n<p>而通俗意义上事务就是为了使得一些更新操作要么都成功，要么都失败。</p>\n<h2 id=\"%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1\">分布式事务 <a class=\"header-anchor\" href=\"#%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1\">#</a></h2>\n<blockquote>\n<p>分布式事务顾名思义就是要在分布式系统中实现事务，它其实是由多个本地事务组合而成。</p>\n</blockquote>\n<p>对于分布式事务而言几乎满足不了 ACID，其实对于单机事务而言大部分情况下也没有满足 ACID，不然怎么会有四种隔离级别呢？所以更别说分布在不同数据库或者不同应用上的分布式事务了。</p>\n<h3 id=\"2pc\">2PC <a class=\"header-anchor\" href=\"#2pc\">#</a></h3>\n<p>2PC（Two-phase commit protocol），中文叫二阶段提交。 二阶段提交是一种强一致性设计，2PC 引入一个事务协调者的角色来协调管理各参与者（也可称之为各本地资源）的提交和回滚，二阶段分别指的是准备（投票）和提交两个阶段。</p>\n<p>准备阶段协调者会给各参与者发送准备命令，你可以把准备命令理解成除了提交事务之外啥事都做完了。</p>\n<p>同步等待所有资源的响应之后就进入第二阶段即提交阶段（注意提交阶段不一定是提交事务，也可能是回滚事务）。</p>\n<p>假如在第一阶段所有参与者都返回准备成功，那么协调者则向所有参与者发送提交事务命令，然后等待所有事务都提交成功之后，返回事务执行成功。</p>\n",
  "link": "/zh-cn/docs/7.分布式/分布式事务/seata.html",
  "meta": {
    "title": "分布式事务-码农阿华",
    "keywords": "分布式事务",
    "description": "分布式事务"
  }
}