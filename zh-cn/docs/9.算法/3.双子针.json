{
  "filename": "3.双子针.md",
  "__html": "<h2 id=\"%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97\">最长上升子序列 <a class=\"header-anchor\" href=\"#%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97\">#</a></h2>\n<p>输入：[ 10,9,2,5,3,7,101,18 ]\n结果：[2,3,7,101 ]    4\n时间复杂度：O(nlogN)</p>\n<pre><code class=\"language-java\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">maxLength</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span>[] nums)</span></span>{\n        <span class=\"hljs-keyword\">int</span>[] dp = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">int</span>[nums.length];\n        Arrays.fill(dp, <span class=\"hljs-number\">1</span>);\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; nums.length; i++) {\n            <span class=\"hljs-comment\">//后面的</span>\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; i; j++) {\n                <span class=\"hljs-comment\">//前面的</span>\n                <span class=\"hljs-keyword\">if</span> (nums[i] &gt; nums[j])\n                    <span class=\"hljs-comment\">//如果前面存在比后面的大的时候，这个最长长度就是i到j的长度</span>\n                    dp[i] = Math.max(dp[i], dp[j] + <span class=\"hljs-number\">1</span>);\n            }\n        }\n        <span class=\"hljs-keyword\">int</span> res = <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; dp.length; i++) {\n            res = Math.max(res, dp[i]);\n        }\n        <span class=\"hljs-keyword\">return</span> res;\n    }\n</code></pre>\n",
  "link": "/zh-cn/docs/9.算法/3.双子针.html",
  "meta": {}
}