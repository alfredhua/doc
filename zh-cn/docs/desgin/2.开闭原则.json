{
  "filename": "2.开闭原则.md",
  "__html": "<p>开闭原则(Open-Closed Principle, OCP)是指一个软件实体如类、模块和函数应该对 扩展开放，对修改关闭。所谓的开闭，也正是对扩展和修改两个行为的一个原则。强调 的是用抽象构建框架，用实现扩展细节。可以提高软件系统的可复用性及可维护性。开 闭原则，是面向对象设计中最基础的设计原则。它指导我们如何建立稳定灵活的系统， 例如:我们版本更新，我尽可能不修改源代码，但是可以增加新功能。</p>\n<p>在现实生活中对于开闭原则也有体现。比如，很多互联网公司都实行弹性制作息时间， 规定每天工作 8 小时。意思就是说，对于每天工作 8 小时这个规定是关闭的，但是你什 么时候来，什么时候走是开放的。早来早走，晚来晚走。</p>\n<p>实现开闭原则的核心思想就是面向抽象编程，接下来我们来看一段代码:</p>\n<p>以体系为例，首先创建一个课程接口 ICourse:</p>\n<pre><code>public interface ICourse {\n    Integer getId(); \n    String getName(); \n    Double getPrice();\n}\n</code></pre>\n<pre><code>public class JavaCourse implements ICourse{  \n    private Integer Id;\n    private String name;\n    private Double price;\n    \n    public JavaCourse(Integer id, String name, Double price) { this.Id = id;\n       this.name = name;\n       this.price = price;\n    }\n    public Integer getId() { \n       return this.Id;\n    }\n}\n</code></pre>\n",
  "link": "/zh-cn/docs/desgin/2.开闭原则.html",
  "meta": {}
}